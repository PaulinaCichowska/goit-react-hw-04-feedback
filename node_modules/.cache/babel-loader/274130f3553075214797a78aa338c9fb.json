{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lisia\\\\Documents\\\\GitHub\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\App.jsx\";\nimport { Section } from './Section/Section';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Notification } from './Notification/Notification';\nimport React, { Component } from 'react';\nimport css from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      positivePercentage: 0\n    };\n\n    this.countTotalFeedback = () => {\n      this.setState(state => ({\n        total: state.good + state.neutral + state.bad\n      }));\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      this.setState(state => ({\n        positivePercentage: Math.floor(this.state.good / this.state.total * 100)\n      }));\n    };\n\n    this.handleIncrement = e => {\n      const {\n        name\n      } = e.target;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      total,\n      positivePercentage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.container,\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          onLeaveFeedback: this.handleIncrement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Lisia/Documents/GitHub/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["Section","FeedbackOptions","Statistics","Notification","React","Component","css","App","state","good","neutral","bad","total","positivePercentage","countTotalFeedback","setState","countPositiveFeedbackPercentage","Math","floor","handleIncrement","e","name","target","prevState","render","container"],"mappings":";AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAIA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEjCG,KAFiC,GAEzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE,CAHC;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,kBAAkB,EAAE;AALd,KAFyB;;AAAA,SAUjCC,kBAViC,GAUZ,MAAM;AACzB,WAAKC,QAAL,CAAeP,KAAD,KAAY;AACxBI,QAAAA,KAAK,EAAEJ,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACE,OAAnB,GAA6BF,KAAK,CAACG;AADlB,OAAZ,CAAd;AAGD,KAdgC;;AAAA,SAgBjCK,+BAhBiC,GAgBC,MAAM;AACtC,WAAKD,QAAL,CAAeP,KAAD,KAAY;AACxBK,QAAAA,kBAAkB,EAAEI,IAAI,CAACC,KAAL,CAAY,KAAKV,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWI,KAA9B,GAAuC,GAAlD;AADI,OAAZ,CAAd;AAID,KArBgC;;AAAA,SAsBjCO,eAtBiC,GAsBdC,CAAD,IAAO;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,CAAC,CAACE,MAAnB;AACA,WAAKP,QAAL,CAAeQ,SAAD,KAAgB;AAC5B,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADE,OAAhB,CAAd;AAIA,WAAKP,kBAAL;AACA,WAAKE,+BAAL;AACD,KA9BgC;AAAA;;AAmCjCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAAoD,KAAKL,KAA/D;AACA,wBAAO;AAAK,MAAA,SAAS,EAAEF,GAAG,CAACmB,SAApB;AAAA,8BACL,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,eAAe,EAAE,KAAKN;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADK,eAIL,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACGP,KAAK,KAAK,CAAV,gBACG,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADH,gBAEG,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEH,IAAlB;AAAwB,UAAA,OAAO,EAAEC,OAAjC;AAA0C,UAAA,GAAG,EAAEC,GAA/C;AAAoD,UAAA,KAAK,EAAEC,KAA3D;AAAkE,UAAA,kBAAkB,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,cAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAUD;;AA/CgC;AAgDlC","sourcesContent":["import { Section } from './Section/Section';\r\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions'\r\nimport { Statistics } from './Statistics/Statistics'\r\nimport { Notification } from './Notification/Notification'\r\nimport React, { Component } from 'react';\r\nimport css from \"./App.module.css\"\r\n\r\n\r\n\r\nexport class App extends Component {\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState((state) => ({\r\n      total: state.good + state.neutral + state.bad,\r\n    }))\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState((state) => ({\r\n      positivePercentage: Math.floor((this.state.good / this.state.total) * 100),\r\n    }))\r\n\r\n  }\r\n  handleIncrement = (e) => {\r\n    const { name } = e.target\r\n    this.setState((prevState) => ({\r\n      [name]: prevState[name] + 1,\r\n    }))\r\n\r\n    this.countTotalFeedback()\r\n    this.countPositiveFeedbackPercentage()\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.state\r\n    return <div className={css.container}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions onLeaveFeedback={this.handleIncrement}  ></FeedbackOptions>\r\n      </Section >\r\n      <Section title=\"Statistics\">\r\n        {total === 0\r\n          ? <Notification message=\"There is no feedback\"></Notification>\r\n          : <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage}></Statistics>}\r\n      </Section>\r\n    </div>\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}