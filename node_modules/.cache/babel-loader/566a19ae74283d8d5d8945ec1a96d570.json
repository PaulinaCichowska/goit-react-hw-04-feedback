{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lisia\\\\Documents\\\\GitHub\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\App2.jsx\",\n    _s = $RefreshSig$();\n\nimport { Section } from './Section/Section';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Notification } from './Notification/Notification';\nimport css from \"./App.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App2 = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0); // const countTotalFeedback = () => {\n  //     setTotal(good + neutral + bad)\n  //     // this.setState((state) => ({\n  //     //     total: state.good + state.neutral + state.bad,\n  //     // }))\n  // }\n\n  const countPositiveFeedbackPercentage = () => {\n    setPositivePercentage(Math.floor(good / total * 100));\n  }; // useEffect(() => {\n  //     setPositivePercentage(Math.floor((good / total) * 100))\n  //     console.log(good)\n  // }, [good, total]);\n\n\n  const handleIncrement = e => {\n    const {\n      name\n    } = e.target;\n\n    switch (name) {\n      case 'good':\n        setGood(good + 1);\n        setTotal(total + 1);\n        countPositiveFeedbackPercentage();\n        console.log(good);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral + 1);\n        setTotal(total + 1);\n        countPositiveFeedbackPercentage();\n        break;\n\n      case 'bad':\n        setBad(bad + 1);\n        setTotal(total + 1);\n        countPositiveFeedbackPercentage();\n        break;\n\n      default:\n        console.log(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        onLeaveFeedback: handleIncrement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App2, \"hZEgdSoHCY1H8XsakyozjMbNCHI=\");\n\n_c = App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["C:/Users/Lisia/Documents/GitHub/goit-react-hw-04-feedback/src/components/App2.jsx"],"names":["Section","FeedbackOptions","Statistics","Notification","css","useState","useEffect","App2","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","positivePercentage","setPositivePercentage","countPositiveFeedbackPercentage","Math","floor","handleIncrement","e","name","target","console","log","container"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,CAAD,CAA5D,CANsB,CAUtB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMa,+BAA+B,GAAG,MAAM;AAE1CD,IAAAA,qBAAqB,CAACE,IAAI,CAACC,KAAL,CAAYZ,IAAI,GAAGM,KAAR,GAAiB,GAA5B,CAAD,CAArB;AAEH,GAJD,CAjBsB,CAuBtB;AACA;AACA;AACA;;;AAIA,QAAMO,eAAe,GAAIC,CAAD,IAAO;AAE3B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,CAAC,CAACE,MAAnB;;AACA,YAAQD,IAAR;AACI,WAAK,MAAL;AACId,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAO,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAI,QAAAA,+BAA+B;AAC/BO,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA;;AACJ,WAAK,SAAL;AACIG,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAK,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAI,QAAAA,+BAA+B;AAC/B;;AACJ,WAAK,KAAL;AACIL,QAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACAG,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAI,QAAAA,+BAA+B;AAC/B;;AACJ;AACIO,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAlBR;AAsBH,GAzBD;;AA8BA,sBACI;AAAK,IAAA,SAAS,EAAEtB,GAAG,CAACuB,SAApB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,eAAe,EAAEN;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,gBACKP,KAAK,KAAK,CAAV,gBACK,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADL,gBAEK,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEN,IAAlB;AAAwB,QAAA,OAAO,EAAEE,OAAjC;AAA0C,QAAA,GAAG,EAAEE,GAA/C;AAAoD,QAAA,KAAK,EAAEE,KAA3D;AAAkE,QAAA,kBAAkB,EAAEE;AAAtF;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxEM;;GAAMT,I;;KAAAA,I","sourcesContent":["import { Section } from './Section/Section';\r\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions'\r\nimport { Statistics } from './Statistics/Statistics'\r\nimport { Notification } from './Notification/Notification'\r\n\r\nimport css from \"./App.module.css\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nexport const App2 = () => {\r\n\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [positivePercentage, setPositivePercentage] = useState(0);\r\n\r\n\r\n\r\n    // const countTotalFeedback = () => {\r\n    //     setTotal(good + neutral + bad)\r\n    //     // this.setState((state) => ({\r\n    //     //     total: state.good + state.neutral + state.bad,\r\n    //     // }))\r\n    // }\r\n\r\n    const countPositiveFeedbackPercentage = () => {\r\n\r\n        setPositivePercentage(Math.floor((good / total) * 100))\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     setPositivePercentage(Math.floor((good / total) * 100))\r\n    //     console.log(good)\r\n    // }, [good, total]);\r\n\r\n\r\n\r\n    const handleIncrement = (e) => {\r\n\r\n        const { name } = e.target\r\n        switch (name) {\r\n            case 'good':\r\n                setGood(good + 1);\r\n                setTotal(total + 1);\r\n                countPositiveFeedbackPercentage()\r\n                console.log(good)\r\n                break;\r\n            case 'neutral':\r\n                setNeutral(neutral + 1);\r\n                setTotal(total + 1);\r\n                countPositiveFeedbackPercentage()\r\n                break;\r\n            case 'bad':\r\n                setBad(bad + 1);\r\n                setTotal(total + 1);\r\n                countPositiveFeedbackPercentage()\r\n                break;\r\n            default:\r\n                console.log(\"error\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={css.container}>\r\n            <Section title=\"Please leave feedback\">\r\n                <FeedbackOptions onLeaveFeedback={handleIncrement}  ></FeedbackOptions>\r\n            </Section >\r\n            <Section title=\"Statistics\">\r\n                {total === 0\r\n                    ? <Notification message=\"There is no feedback\"></Notification>\r\n                    : <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage}></Statistics>}\r\n            </Section>\r\n        </div>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}